syntax = "proto3";

package side.btcbridge;

import "gogoproto/gogo.proto";
import "side/btcbridge/params.proto";
import "side/btcbridge/bitcoin.proto";

option go_package = "github.com/sideprotocol/side/x/btcbridge/types";

// Msg defines the Msg service.
service Msg {
  // SubmitBlockHeaders submits bitcoin block headers to the side chain.
  rpc SubmitBlockHeaders (MsgSubmitBlockHeaders) returns (MsgSubmitBlockHeadersResponse);
  // SubmitDepositTransaction submits bitcoin transaction to the side chain.
  rpc SubmitDepositTransaction (MsgSubmitDepositTransaction) returns (MsgSubmitDepositTransactionResponse);
  // SubmitWithdrawalTransaction submits bitcoin transaction to the side chain.
  rpc SubmitWithdrawTransaction (MsgSubmitWithdrawTransaction) returns (MsgSubmitWithdrawTransactionResponse);
  // Withdraw withdraws the asset from the side chain.
  rpc Withdraw (MsgWithdraw) returns (MsgWithdrawResponse);
  // SubmitWithdrawStatus submits the status of the withdraw transaction.
  rpc SubmitWithdrawStatus (MsgSubmitWithdrawStatus) returns (MsgSubmitWithdrawStatusResponse);
  // UpdateParams defines a governance operation for updating the x/btcbridge module
  // parameters. The authority defaults to the x/gov module account.
  //
  // Since: cosmos-sdk 0.47
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

// MsgSubmitWithdrawStatus defines the Msg/SubmitWithdrawStatus request type.
message MsgSubmitWithdrawStatus {
  string sender = 1;
  uint64 sequence = 2;
  string txid = 3;
  WithdrawStatus status = 4;
}

// MsgSubmitWithdrawStatusResponse defines the Msg/SubmitWithdrawStatus response type.
message MsgSubmitWithdrawStatusResponse {
}

// MsgSubmitBlockHeaders defines the Msg/SubmitBlockHeaders request type.
message MsgSubmitBlockHeaders {
  string sender = 1;
  repeated BlockHeader block_headers = 2;
}

// MsgSubmitBlockHeadersResponse defines the Msg/SubmitBlockHeaders response type.
message MsgSubmitBlockHeadersResponse {
}

// MsgSubmitDepositTransaction defines the Msg/SubmitDepositTransaction request type.
message MsgSubmitDepositTransaction {
  // this is relayer address who submit the bitcoin transaction to the side chain
  string sender = 1;
  string blockhash = 2;
  // the tx bytes in base64 format
  // used for parsing the sender of the transaction
  string prev_tx_bytes = 3;
  // the tx bytes in base64 format
  string tx_bytes = 4;
  repeated string proof = 5;
}

// MsgSubmitDepositTransactionResponse defines the Msg/SubmitDepositTransaction response type.
message MsgSubmitDepositTransactionResponse {
}

// MsgSubmitWithdrawTransaction defines the Msg/SubmitWithdrawTransaction request type.
message MsgSubmitWithdrawTransaction {
  // this is relayer address who submit the bitcoin transaction to the side chain
  string sender = 1;
  string blockhash = 2;
  // the tx bytes in base64 format
  string tx_bytes = 4;
  repeated string proof = 5;
}

// MsgSubmitWithdrawTransactionResponse defines the Msg/SubmitWithdrawTransaction response type.
message MsgSubmitWithdrawTransactionResponse {
}

// MsgWithdraw defines the Msg/Withdraw request type.
message MsgWithdraw {
  string sender = 1;
  // withdraw amount in satoshi, etc: 100000000sat = 1btc
  string amount = 2;
}

// MsgWithdrawResponse defines the Msg/Withdraw response type.
message MsgWithdrawResponse {
}

// MsgUpdateParams is the Msg/UpdateParams request type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParams {
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1;

  // params defines the x/btcbridge parameters to be updated.
  //
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the Msg/UpdateParams response type.
//
// Since: cosmos-sdk 0.47
message MsgUpdateParamsResponse {}
