syntax = "proto3";
package side.btcbridge;

import "gogoproto/gogo.proto";

option go_package = "github.com/sideprotocol/side/x/btcbridge/types";

// Bitcoin Block Header
message BlockHeader {
  uint64 version = 1;
  string hash = 2;
  uint64 height = 3;
  string previous_block_hash = 4;
  string merkle_root = 5;
  uint64 nonce = 6;
  string bits = 7;
  uint64 time = 8;
  uint64 ntx = 9;
}

// Bitcoin Withdrawal Status
enum WithdrawStatus {
  // WITHDRAW_STATUS_UNSPECIFIED - Default value, should not be used
  WITHDRAW_STATUS_UNSPECIFIED = 0;
  // WITHDRAW_STATUS_CREATED - The withdrawal request is created
  WITHDRAW_STATUS_CREATED = 1;
  // WITHDRAW_STATUS_BROADCASTED - The withdrawal tx is broadcasted
  WITHDRAW_STATUS_BROADCASTED = 2;
  // WITHDRAW_STATUS_CONFIRMED - The withdrawal tx is confirmed
  WITHDRAW_STATUS_CONFIRMED = 3;
  // WITHDRAW_STATUS_REJECTED - The withdrawal tx is rejected
  WITHDRAW_STATUS_REJECTED = 4;
}

// Bitcoin Withdrawal Request
message BitcoinWithdrawRequest {
  string address = 1;
  uint64 sequence = 2;
  string txid = 3;
  WithdrawStatus status = 4;
}

// Rune ID
message RuneId {
  // block height
  uint64 block = 1;
  // tx index
  uint32 tx = 2;
}

// Rune Edict
message Edict {
  RuneId id = 1;
  string amount = 2;
  uint32 output = 3;
}
